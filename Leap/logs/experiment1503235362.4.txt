INFO:root:Data variables: train_paths: ['Leap_Data\\DataGath1', 'Leap_Data\\DataGath3'], test_paths: ['Leap_Data\\DataGath2'], use_auto_split: True, frames_per_gesture: 1, separate_frames: True, feature_set_type: fingers_only
INFO:root:SelectKBest(k=200, score_func=<function f_classif at 0x000000001726FE48>)
INFO:root:kNN {'estimator__n_neighbors': 5, 'n_jobs': 1, 'verbose': 0, 'estimator__metric': 'minkowski', 'cv': None, 'estimator__algorithm': 'auto', 'scoring': None, 'random_state': None, 'pre_dispatch': '2*n_jobs', 'param_distributions': {'n_neighbors': [1, 2, 3, 4, 5, 6, 7, 8, 9], 'weights': ['uniform', 'distance'], 'leaf_size': [1, 11, 21, 31, 41, 51, 61, 71, 81, 91], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute'], 'p': [1, 2, 3, 4, 5, 6, 7, 8, 9]}, 'estimator__metric_params': None, 'fit_params': {}, 'estimator__leaf_size': 30, 'refit': True, 'iid': True, 'estimator__weights': 'uniform', 'estimator__p': 2, 'n_iter': 20, 'estimator__n_jobs': 1, 'return_train_score': True, 'estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform'), 'error_score': 'raise'}
INFO:root:BNB {'param_distributions': {'alpha': [1.0, 0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09, 1e-10, 1e-11, 1e-12, 1e-13, 1e-14, 1e-15, 1e-16, 1e-17, 1e-18, 1e-19, 1e-20, 1e-21, 1e-22, 1.0000000000000001e-23, 1.0000000000000001e-24, 9.999999999999999e-26, 9.999999999999999e-27, 1e-27, 1.0000000000000001e-28, 1.0000000000000001e-29, 9.999999999999999e-31, 1e-31, 9.999999999999999e-33, 1e-33, 1.0000000000000001e-34, 1e-35, 1e-36, 1e-37, 1e-38, 1.0000000000000001e-39, 1e-40, 1e-41, 9.999999999999999e-43, 1e-43, 1e-44, 1.0000000000000001e-45, 1e-46, 1e-47, 1e-48, 1.0000000000000001e-49], 'fit_prior': [True, False]}, 'n_iter': 20, 'n_jobs': 1, 'scoring': None, 'verbose': 0, 'fit_params': {}, 'random_state': None, 'estimator__fit_prior': True, 'refit': True, 'pre_dispatch': '2*n_jobs', 'return_train_score': True, 'iid': True, 'estimator': BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), 'error_score': 'raise', 'estimator__binarize': 0.0, 'estimator__alpha': 1.0, 'cv': None, 'estimator__class_prior': None}
INFO:root:MLP {'estimator__epsilon': 1e-08, 'n_jobs': 1, 'estimator__hidden_layer_sizes': (100,), 'verbose': 0, 'estimator__early_stopping': False, 'estimator__nesterovs_momentum': True, 'estimator__alpha': 0.0001, 'estimator__shuffle': True, 'scoring': None, 'estimator__learning_rate_init': 0.001, 'estimator__activation': 'relu', 'random_state': None, 'estimator__verbose': False, 'pre_dispatch': '2*n_jobs', 'param_distributions': {'shuffle': [True, False], 'verbose': [True, False], 'validation_fraction': [0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09], 'activation': ('identity', 'logistic', 'tanh', 'relu'), 'alpha': [1.0, 0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09], 'early_stopping': [True, False], 'warm_start': [True, False], 'nesterovs_momentum': [True, False], 'solver': ['lbfgs', 'sgd', 'adam'], 'tol': [1.0, 0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09, 1e-10, 1e-11, 1e-12, 1e-13, 1e-14, 1e-15, 1e-16, 1e-17, 1e-18, 1e-19, 1e-20, 1e-21, 1e-22, 1.0000000000000001e-23, 1.0000000000000001e-24, 9.999999999999999e-26, 9.999999999999999e-27, 1e-27, 1.0000000000000001e-28, 1.0000000000000001e-29, 9.999999999999999e-31, 1e-31, 9.999999999999999e-33, 1e-33, 1.0000000000000001e-34, 1e-35, 1e-36, 1e-37, 1e-38, 1.0000000000000001e-39, 1e-40, 1e-41, 9.999999999999999e-43, 1e-43, 1e-44, 1.0000000000000001e-45, 1e-46, 1e-47, 1e-48, 1.0000000000000001e-49], 'learning_rate': ['constant', 'invscaling', 'adaptive'], 'learning_rate_init': [1.0, 0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09]}, 'fit_params': {}, 'estimator__solver': 'adam', 'estimator__warm_start': False, 'estimator__max_iter': 200, 'refit': True, 'iid': True, 'cv': None, 'estimator__beta_2': 0.999, 'estimator__beta_1': 0.9, 'estimator__power_t': 0.5, 'n_iter': 20, 'estimator__learning_rate': 'constant', 'estimator__random_state': None, 'estimator__batch_size': 'auto', 'return_train_score': True, 'estimator__momentum': 0.9, 'estimator': MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'error_score': 'raise', 'estimator__validation_fraction': 0.1, 'estimator__tol': 0.0001}
