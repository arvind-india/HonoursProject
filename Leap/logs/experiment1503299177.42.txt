INFO:root:Data variables: train_paths: ['Leap_Data\\DataGath1', 'Leap_Data\\DataGath3'], test_paths: ['Leap_Data\\DataGath2'], use_auto_split: False, frames_per_gesture: 1, separate_frames: True, feature_set_type: fingers_only
INFO:root:SelectKBest(k=200, score_func=<function f_classif at 0x000000001726FE48>)
INFO:root:kNN {'estimator__n_neighbors': 5, 'n_jobs': 1, 'verbose': 0, 'estimator__metric': 'minkowski', 'cv': None, 'estimator__algorithm': 'auto', 'scoring': None, 'random_state': None, 'pre_dispatch': '2*n_jobs', 'param_distributions': {'n_neighbors': [1, 2, 3, 4, 5, 6, 7, 8, 9], 'weights': ['uniform', 'distance'], 'leaf_size': [1, 11, 21, 31, 41, 51, 61, 71, 81, 91], 'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute'], 'p': [1, 2, 3, 4, 5, 6, 7, 8, 9]}, 'estimator__metric_params': None, 'fit_params': {}, 'estimator__leaf_size': 30, 'refit': True, 'iid': True, 'estimator__weights': 'uniform', 'estimator__p': 2, 'n_iter': 20, 'estimator__n_jobs': 1, 'return_train_score': True, 'estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform'), 'error_score': 'raise'}
INFO:root:BNB {'param_distributions': {'alpha': [1.0, 0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09, 1e-10, 1e-11, 1e-12, 1e-13, 1e-14, 1e-15, 1e-16, 1e-17, 1e-18, 1e-19, 1e-20, 1e-21, 1e-22, 1.0000000000000001e-23, 1.0000000000000001e-24, 9.999999999999999e-26, 9.999999999999999e-27, 1e-27, 1.0000000000000001e-28, 1.0000000000000001e-29, 9.999999999999999e-31, 1e-31, 9.999999999999999e-33, 1e-33, 1.0000000000000001e-34, 1e-35, 1e-36, 1e-37, 1e-38, 1.0000000000000001e-39, 1e-40, 1e-41, 9.999999999999999e-43, 1e-43, 1e-44, 1.0000000000000001e-45, 1e-46, 1e-47, 1e-48, 1.0000000000000001e-49], 'fit_prior': [True, False]}, 'n_iter': 20, 'n_jobs': 1, 'scoring': None, 'verbose': 0, 'fit_params': {}, 'random_state': None, 'estimator__fit_prior': True, 'refit': True, 'pre_dispatch': '2*n_jobs', 'return_train_score': True, 'iid': True, 'estimator': BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True), 'error_score': 'raise', 'estimator__binarize': 0.0, 'estimator__alpha': 1.0, 'cv': None, 'estimator__class_prior': None}
INFO:root:MLP {'estimator__epsilon': 1e-08, 'n_jobs': 1, 'estimator__hidden_layer_sizes': (100,), 'verbose': 0, 'estimator__early_stopping': False, 'estimator__nesterovs_momentum': True, 'estimator__alpha': 0.0001, 'estimator__shuffle': True, 'scoring': None, 'estimator__learning_rate_init': 0.001, 'estimator__activation': 'relu', 'random_state': None, 'estimator__verbose': False, 'pre_dispatch': '2*n_jobs', 'param_distributions': {'shuffle': [True, False], 'verbose': [True, False], 'validation_fraction': [0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09], 'activation': ('identity', 'logistic', 'tanh', 'relu'), 'alpha': [1.0, 0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09], 'early_stopping': [True, False], 'warm_start': [True, False], 'nesterovs_momentum': [True, False], 'solver': ['lbfgs', 'sgd', 'adam'], 'tol': [1.0, 0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09, 1e-10, 1e-11, 1e-12, 1e-13, 1e-14, 1e-15, 1e-16, 1e-17, 1e-18, 1e-19, 1e-20, 1e-21, 1e-22, 1.0000000000000001e-23, 1.0000000000000001e-24, 9.999999999999999e-26, 9.999999999999999e-27, 1e-27, 1.0000000000000001e-28, 1.0000000000000001e-29, 9.999999999999999e-31, 1e-31, 9.999999999999999e-33, 1e-33, 1.0000000000000001e-34, 1e-35, 1e-36, 1e-37, 1e-38, 1.0000000000000001e-39, 1e-40, 1e-41, 9.999999999999999e-43, 1e-43, 1e-44, 1.0000000000000001e-45, 1e-46, 1e-47, 1e-48, 1.0000000000000001e-49], 'learning_rate': ['constant', 'invscaling', 'adaptive'], 'learning_rate_init': [1.0, 0.1, 0.01, 0.001, 0.0001, 1e-05, 1e-06, 1e-07, 1e-08, 1e-09]}, 'fit_params': {}, 'estimator__solver': 'adam', 'estimator__warm_start': False, 'estimator__max_iter': 200, 'refit': True, 'iid': True, 'cv': None, 'estimator__beta_2': 0.999, 'estimator__beta_1': 0.9, 'estimator__power_t': 0.5, 'n_iter': 20, 'estimator__learning_rate': 'constant', 'estimator__random_state': None, 'estimator__batch_size': 'auto', 'return_train_score': True, 'estimator__momentum': 0.9, 'estimator': MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False), 'error_score': 'raise', 'estimator__validation_fraction': 0.1, 'estimator__tol': 0.0001}
INFO:root:SVC {'n_jobs': 1, 'verbose': 0, 'estimator__gamma': 'auto', 'random_state': None, 'estimator__decision_function_shape': None, 'estimator__probability': False, 'cv': None, 'scoring': None, 'estimator__cache_size': 200, 'estimator__verbose': False, 'pre_dispatch': '2*n_jobs', 'param_distributions': {'kernel': ('linear', 'rbf', 'poly', 'sigmoid'), 'C': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], 'probability': [True, False], 'degree': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'decision_function_shape': ['ovo', 'ovr'], 'shrinking': [True, False], 'coef0': [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320, 330, 340, 350, 360, 370, 380, 390, 400, 410, 420, 430, 440, 450, 460, 470, 480, 490], 'gamma': [1, 0.1, 0.01, 0.001, 0.0001], 'class_weight': ['balanced', None]}, 'estimator__kernel': 'rbf', 'fit_params': {}, 'estimator__max_iter': -1, 'refit': True, 'iid': True, 'estimator__shrinking': True, 'n_iter': 20, 'estimator__degree': 3, 'estimator__class_weight': None, 'estimator__C': 1.0, 'estimator__random_state': None, 'return_train_score': True, 'estimator': SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape=None, degree=3, gamma='auto', kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'estimator__coef0': 0.0, 'error_score': 'raise', 'estimator__tol': 0.001}
INFO:root:MLP 0.449612403101
INFO:root:BNB 0.46511627907
INFO:root:kNN 0.387596899225
INFO:root:SVC 0.542635658915
